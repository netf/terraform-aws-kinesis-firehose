{
  "version": 4,
  "terraform_version": "0.12.1",
  "serial": 16,
  "lineage": "326b3836-30af-f5f5-c95d-ba3ee2a61e79",
  "outputs": {},
  "resources": [
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "identity",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "659122056641",
            "arn": "arn:aws:sts::659122056641:assumed-role/dp-admins/default-datalake-dev-sts",
            "id": "2019-07-02 16:08:03.73623873 +0000 UTC",
            "user_id": "AROAI3RKAJJYJ7ZLZ7J2E:default-datalake-dev-sts"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "identity",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "659122056641",
            "arn": "arn:aws:sts::659122056641:assumed-role/dp-admins/default-datalake-dev-sts",
            "id": "2019-07-02 16:08:03.737424808 +0000 UTC",
            "user_id": "AROAI3RKAJJYJ7ZLZ7J2E:default-datalake-dev-sts"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "identity",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "659122056641",
            "arn": "arn:aws:sts::659122056641:assumed-role/dp-admins/default-datalake-dev-sts",
            "id": "2019-07-02 16:08:03.736440273 +0000 UTC",
            "user_id": "AROAI3RKAJJYJ7ZLZ7J2E:default-datalake-dev-sts"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "main",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "659122056641",
            "arn": "arn:aws:sts::659122056641:assumed-role/dp-admins/default-datalake-dev-sts",
            "id": "2019-07-02 16:08:03.735347112 +0000 UTC",
            "user_id": "AROAI3RKAJJYJ7ZLZ7J2E:default-datalake-dev-sts"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "access-policy-arn",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "217058397",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowARN\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::047625233815:user/ursuad\"\n      },\n      \"Condition\": {\n        \"StringEqualsIfExists\": {\n          \"sts:ExternalId\": \"\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [
                  {
                    "test": "StringEqualsIfExists",
                    "values": [
                      ""
                    ],
                    "variable": "sts:ExternalId"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::047625233815:user/ursuad"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [],
                "sid": "AllowARN"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "access-policy-arn",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2921930320",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowARN\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"AWS\": []\n      },\n      \"Condition\": {\n        \"StringEqualsIfExists\": {\n          \"sts:ExternalId\": \"\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [
                  {
                    "test": "StringEqualsIfExists",
                    "values": [
                      ""
                    ],
                    "variable": "sts:ExternalId"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [],
                    "type": "AWS"
                  }
                ],
                "resources": [],
                "sid": "AllowARN"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "access-policy-arn",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "217058397",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowARN\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::047625233815:user/ursuad\"\n      },\n      \"Condition\": {\n        \"StringEqualsIfExists\": {\n          \"sts:ExternalId\": \"\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [
                  {
                    "test": "StringEqualsIfExists",
                    "values": [
                      ""
                    ],
                    "variable": "sts:ExternalId"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::047625233815:user/ursuad"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [],
                "sid": "AllowARN"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "access-policy-service",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2386378443",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowService\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      ""
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "AllowService"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "access-policy-service",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3651700134",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowService\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"firehose.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "firehose.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "AllowService"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "access-policy-service",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2386378443",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowService\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      ""
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "AllowService"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "glue-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "glue-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "glue-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "kms-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3105882455",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"KMSAccess\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:GenerateDataKey\",\n        \"kms:Encrypt\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"arn:aws:kms:*:659122056641:key/*\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:GenerateDataKey"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:kms:*:659122056641:key/*"
                ],
                "sid": "KMSAccess"
              }
            ],
            "version": "2012-10-17"
          },
          "depends_on": [
            "data.aws_caller_identity.identity"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "kms-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3105882455",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"KMSAccess\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:GenerateDataKey\",\n        \"kms:Encrypt\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"arn:aws:kms:*:659122056641:key/*\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:GenerateDataKey"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:kms:*:659122056641:key/*"
                ],
                "sid": "KMSAccess"
              }
            ],
            "version": "2012-10-17"
          },
          "depends_on": [
            "data.aws_caller_identity.identity"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "kms-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3105882455",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"KMSAccess\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:GenerateDataKey\",\n        \"kms:Encrypt\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"arn:aws:kms:*:659122056641:key/*\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:GenerateDataKey"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:kms:*:659122056641:key/*"
                ],
                "sid": "KMSAccess"
              }
            ],
            "version": "2012-10-17"
          },
          "depends_on": [
            "data.aws_caller_identity.identity"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1119435644",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowRead\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:List*\",\n        \"s3:GetObject*\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write\"\n      }\n    },\n    {\n      \"Sid\": \"AllowWrite\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:RestoreObject\",\n        \"s3:PutObject*\",\n        \"s3:PutObject\",\n        \"s3:List*\",\n        \"s3:GetObject*\",\n        \"s3:DeleteObject*\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write\"\n      }\n    },\n    {\n      \"Sid\": \"DenyIPAddr\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"s3:RestoreObject\",\n        \"s3:PutObject*\",\n        \"s3:PutObject\",\n        \"s3:GetObject*\",\n        \"s3:DeleteObject*\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Condition\": {\n        \"NotIpAddress\": {\n          \"aws:SourceIP\": [\n            \"0.0.0.0/0\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "override_json": "{}",
            "policy_id": null,
            "source_json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowRead\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:List*\",\n        \"s3:GetObject*\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write\"\n      }\n    },\n    {\n      \"Sid\": \"AllowWrite\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:RestoreObject\",\n        \"s3:PutObject*\",\n        \"s3:PutObject\",\n        \"s3:List*\",\n        \"s3:GetObject*\",\n        \"s3:DeleteObject*\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write\"\n      }\n    },\n    {\n      \"Sid\": \"DenyIPAddr\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"s3:RestoreObject\",\n        \"s3:PutObject*\",\n        \"s3:PutObject\",\n        \"s3:GetObject*\",\n        \"s3:DeleteObject*\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Condition\": {\n        \"NotIpAddress\": {\n          \"aws:SourceIP\": \"0.0.0.0/0\"\n        }\n      }\n    }\n  ]\n}",
            "statement": null,
            "version": "2012-10-17"
          },
          "depends_on": [
            "data.aws_iam_policy_document.source_policy[0]"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "policy_bucket_owner_full_control",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "source_policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3859540482",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowRead\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:List*\",\n        \"s3:GetObject*\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write\"\n      }\n    },\n    {\n      \"Sid\": \"AllowWrite\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:RestoreObject\",\n        \"s3:PutObject*\",\n        \"s3:PutObject\",\n        \"s3:List*\",\n        \"s3:GetObject*\",\n        \"s3:DeleteObject*\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write\"\n      }\n    },\n    {\n      \"Sid\": \"DenyIPAddr\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"s3:RestoreObject\",\n        \"s3:PutObject*\",\n        \"s3:PutObject\",\n        \"s3:GetObject*\",\n        \"s3:DeleteObject*\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Condition\": {\n        \"NotIpAddress\": {\n          \"aws:SourceIP\": \"0.0.0.0/0\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "s3:GetObject*",
                  "s3:List*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1",
                  "arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*"
                ],
                "sid": "AllowRead"
              },
              {
                "actions": [
                  "s3:AbortMultipartUpload",
                  "s3:DeleteObject*",
                  "s3:GetObject*",
                  "s3:List*",
                  "s3:PutObject",
                  "s3:PutObject*",
                  "s3:RestoreObject"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1",
                  "arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*"
                ],
                "sid": "AllowWrite"
              },
              {
                "actions": [
                  "s3:AbortMultipartUpload",
                  "s3:DeleteObject*",
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObject*",
                  "s3:RestoreObject"
                ],
                "condition": [
                  {
                    "test": "NotIpAddress",
                    "values": [
                      "0.0.0.0/0"
                    ],
                    "variable": "aws:SourceIP"
                  }
                ],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1",
                  "arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*"
                ],
                "sid": "DenyIPAddr"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "source_policy_bucket_owner_full_control",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "mode": "data",
      "type": "aws_kms_key",
      "name": "kms_key",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:eu-west-1:659122056641:key/93f1687e-be54-48fa-af97-5b42fece2982",
            "aws_account_id": "659122056641",
            "creation_date": "2019-04-03T16:40:37Z",
            "deletion_date": null,
            "description": "dp-dl-nonprod-leak-kms-dev-01",
            "enabled": true,
            "expiration_model": "",
            "grant_tokens": null,
            "id": "93f1687e-be54-48fa-af97-5b42fece2982",
            "key_id": "alias/dp-dl-nonprod-leak-kms-dev-01",
            "key_manager": "CUSTOMER",
            "key_state": "Enabled",
            "key_usage": "ENCRYPT_DECRYPT",
            "origin": "AWS_KMS",
            "valid_to": null
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "main",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:eu-west-1:659122056641:log-group:dp-dl-kinesis-firehose-stream-1:*",
            "id": "dp-dl-kinesis-firehose-stream-1",
            "kms_key_id": "",
            "name": "dp-dl-kinesis-firehose-stream-1",
            "name_prefix": null,
            "retention_in_days": 0,
            "tags": null
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose",
      "mode": "managed",
      "type": "aws_cloudwatch_log_stream",
      "name": "main",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:eu-west-1:659122056641:log-group:dp-dl-kinesis-firehose-stream-1:log-stream:dp-dl-kinesis-firehose-stream-1",
            "id": "dp-dl-kinesis-firehose-stream-1",
            "log_group_name": "dp-dl-kinesis-firehose-stream-1",
            "name": "dp-dl-kinesis-firehose-stream-1"
          },
          "depends_on": [
            "aws_cloudwatch_log_group.main"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "instance-profile",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "instance-profile",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "instance-profile",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "role",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-test-1-read",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AllowARN\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::047625233815:user/ursuad\"},\"Action\":\"sts:AssumeRole\",\"Condition\":{\"StringEqualsIfExists\":{\"sts:ExternalId\":\"\"}}}]}",
            "create_date": "2019-07-02T16:09:07Z",
            "description": "",
            "force_detach_policies": false,
            "id": "dp-dl-kinesis-firehose-test-1-read",
            "max_session_duration": 3600,
            "name": "dp-dl-kinesis-firehose-test-1-read",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "Name": "dp-dl-kinesis-firehose-test-1-read"
            },
            "unique_id": "AROAZS5V4NXARJA7EN7PX"
          },
          "depends_on": [
            "data.aws_iam_policy_document.access-policy-arn[0]",
            "data.aws_iam_policy_document.access-policy-service[0]"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "role",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AllowService\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"firehose.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2019-07-02T16:09:07Z",
            "description": "",
            "force_detach_policies": false,
            "id": "dp-dl-kinesis-firehose-stream-1-read-s3-write",
            "max_session_duration": 3600,
            "name": "dp-dl-kinesis-firehose-stream-1-read-s3-write",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "Name": "dp-dl-kinesis-firehose-stream-1-read-s3-write"
            },
            "unique_id": "AROAZS5V4NXA2EGXCHCJI"
          },
          "depends_on": [
            "data.aws_iam_policy_document.access-policy-arn[0]",
            "data.aws_iam_policy_document.access-policy-service[0]"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "role",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-test-1-write",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AllowARN\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::047625233815:user/ursuad\"},\"Action\":\"sts:AssumeRole\",\"Condition\":{\"StringEqualsIfExists\":{\"sts:ExternalId\":\"\"}}}]}",
            "create_date": "2019-07-02T16:09:07Z",
            "description": "",
            "force_detach_policies": false,
            "id": "dp-dl-kinesis-firehose-test-1-write",
            "max_session_duration": 3600,
            "name": "dp-dl-kinesis-firehose-test-1-write",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "Name": "dp-dl-kinesis-firehose-test-1-write"
            },
            "unique_id": "AROAZS5V4NXAWGG5O5NLO"
          },
          "depends_on": [
            "data.aws_iam_policy_document.access-policy-arn[0]",
            "data.aws_iam_policy_document.access-policy-service[0]"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "assume-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "assume-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "assume-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "glue-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "glue-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "glue-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "kms-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "kms-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "dp-dl-kinesis-firehose-stream-1-read-s3-write:kms-policy",
            "name": "kms-policy",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"KMSAccess\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:GenerateDataKey\",\n        \"kms:Encrypt\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"arn:aws:kms:*:659122056641:key/*\"\n    }\n  ]\n}",
            "role": "dp-dl-kinesis-firehose-stream-1-read-s3-write"
          },
          "depends_on": [
            "aws_iam_role.role",
            "aws_iam_role.role[0]",
            "data.aws_iam_policy_document.kms-policy"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "kms-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "main",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "main",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "main",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "policy-file",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "policy-file",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "policy-file",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "policy-inline",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "dp-dl-kinesis-firehose-test-1-read:policy-inline",
            "name": "policy-inline",
            "name_prefix": null,
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"kinesis:Get*\",\n                \"kinesis:DescribeStream\"\n            ],\n            \"Resource\": \"arn:aws:kinesis:eu-west-1:659122056641:stream/dp-dl-kinesis-firehose-stream-1\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"kinesis:ListStreams\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        }\n    ]\n}\n",
            "role": "dp-dl-kinesis-firehose-test-1-read"
          },
          "depends_on": [
            "aws_iam_role.role",
            "aws_iam_role.role[0]"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "policy-inline",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "dp-dl-kinesis-firehose-stream-1-read-s3-write:policy-inline",
            "name": "policy-inline",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [{\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"glue:GetTableVersions\"\n      ],\n      \"Resource\": \"*\"\n    }, {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:AbortMultipartUpload\",\n        \"s3:GetBucketLocation\",\n        \"s3:GetObject\",\n        \"s3:ListBucket\",\n        \"s3:ListBucketMultipartUploads\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::%FIREHOSE_BUCKET_NAME%\",\n        \"arn:aws:s3:::%FIREHOSE_BUCKET_NAME%/*\"\n      ]\n    }, {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"lambda:InvokeFunction\",\n        \"lambda:GetFunctionConfiguration\"\n      ],\n      \"Resource\": \"arn:aws:lambda:eu-west-1:659122056641:function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%\"\n    }, {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:GenerateDataKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": [\n        \"arn:aws:kms:eu-west-1:659122056641:key/arn:aws:kms:eu-west-1:659122056641:key/93f1687e-be54-48fa-af97-5b42fece2982\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"kms:ViaService\": \"s3.eu-west-1.amazonaws.com\"\n        },\n        \"StringLike\": {\n          \"kms:EncryptionContext:aws:s3:arn\": [\n            \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\"\n          ]\n        }\n      }\n    }, {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:eu-west-1:659122056641:log-group:dp-dl-kinesis-firehose-stream-1:log-stream:dp-dl-kinesis-firehose-stream-1\"\n      ]\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kinesis:DescribeStream\",\n        \"kinesis:GetShardIterator\",\n        \"kinesis:GetRecords\"\n      ],\n      \"Resource\": \"arn:aws:kinesis:eu-west-1:659122056641:stream/dp-dl-kinesis-firehose-stream-1\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": [\n        \"arn:aws:kms:eu-west-1:659122056641:key/%SSE_KEY_ID%\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"kms:ViaService\": \"kinesis.eu-west-1.amazonaws.com\"\n        },\n        \"StringLike\": {\n          \"kms:EncryptionContext:aws:kinesis:arn\": \"arn:aws:kinesis:eu-west-1:659122056641:stream/dp-dl-kinesis-firehose-stream-1\"\n        }\n      }\n    }\n  ]\n}\n",
            "role": "dp-dl-kinesis-firehose-stream-1-read-s3-write"
          },
          "depends_on": [
            "aws_iam_role.role",
            "aws_iam_role.role[0]"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "policy-inline",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "dp-dl-kinesis-firehose-test-1-write:policy-inline",
            "name": "policy-inline",
            "name_prefix": null,
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"kinesis:Get*\",\n                \"kinesis:PutRecord\",\n                \"kinesis:PutRecords\",\n                \"kinesis:DescribeStream\"\n            ],\n            \"Resource\": \"arn:aws:kinesis:eu-west-1:659122056641:stream/dp-dl-kinesis-firehose-stream-1\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"kinesis:ListStreams\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        }\n    ]\n}\n",
            "role": "dp-dl-kinesis-firehose-test-1-write"
          },
          "depends_on": [
            "aws_iam_role.role",
            "aws_iam_role.role[0]"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "s3-read-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "s3-read-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "s3-read-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "s3-write-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "s3-write-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "dp-dl-kinesis-firehose-stream-1-read-s3-write:s3-write-policy_dp-dl-kinesis-firehose-test-s3-1",
            "name": "s3-write-policy_dp-dl-kinesis-firehose-test-s3-1",
            "name_prefix": null,
            "policy": "{\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [{\n                \"Effect\": \"Allow\",\n                \"Action\": \"s3:*\",\n                \"Resource\": [\n                        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\",\n                        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\"\n                ]\n        }]\n}\n",
            "role": "dp-dl-kinesis-firehose-stream-1-read-s3-write"
          },
          "depends_on": [
            "aws_iam_role.role",
            "aws_iam_role.role[0]"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "s3-write-policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_read",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "policy-managed",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_firehose",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "policy-managed",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.role_kinesis_stream_write",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "policy-managed",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose",
      "mode": "managed",
      "type": "aws_kinesis_firehose_delivery_stream",
      "name": "main",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:firehose:eu-west-1:659122056641:deliverystream/dp-dl-kinesis-firehose-stream-1",
            "destination": "extended_s3",
            "destination_id": "destinationId-000000000001",
            "elasticsearch_configuration": [],
            "extended_s3_configuration": [
              {
                "bucket_arn": "arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1",
                "buffer_interval": 300,
                "buffer_size": 128,
                "cloudwatch_logging_options": [
                  {
                    "enabled": true,
                    "log_group_name": "dp-dl-kinesis-firehose-stream-1",
                    "log_stream_name": "dp-dl-kinesis-firehose-stream-1"
                  }
                ],
                "compression_format": "Snappy",
                "data_format_conversion_configuration": [],
                "error_output_prefix": "",
                "kms_key_arn": "arn:aws:kms:eu-west-1:659122056641:key/93f1687e-be54-48fa-af97-5b42fece2982",
                "prefix": "",
                "processing_configuration": [],
                "role_arn": "arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write",
                "s3_backup_configuration": [],
                "s3_backup_mode": "Disabled"
              }
            ],
            "id": "arn:aws:firehose:eu-west-1:659122056641:deliverystream/dp-dl-kinesis-firehose-stream-1",
            "kinesis_source_configuration": [
              {
                "kinesis_stream_arn": "arn:aws:kinesis:eu-west-1:659122056641:stream/dp-dl-kinesis-firehose-stream-1",
                "role_arn": "arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write"
              }
            ],
            "name": "dp-dl-kinesis-firehose-stream-1",
            "redshift_configuration": [],
            "s3_configuration": [],
            "splunk_configuration": [],
            "tags": {
              "Name": "dp-dl-kinesis-firehose-stream-1"
            },
            "version_id": "1"
          },
          "depends_on": [
            "aws_cloudwatch_log_group.main",
            "aws_cloudwatch_log_stream.main",
            "module.kinesis_stream",
            "module.role_firehose",
            "module.s3"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose",
      "mode": "managed",
      "type": "aws_kinesis_firehose_delivery_stream",
      "name": "orc",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose",
      "mode": "managed",
      "type": "aws_kinesis_firehose_delivery_stream",
      "name": "parquet",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.kinesis_stream",
      "mode": "managed",
      "type": "aws_kinesis_stream",
      "name": "main",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:kinesis:eu-west-1:659122056641:stream/dp-dl-kinesis-firehose-stream-1",
            "encryption_type": "NONE",
            "enforce_consumer_deletion": false,
            "id": "arn:aws:kinesis:eu-west-1:659122056641:stream/dp-dl-kinesis-firehose-stream-1",
            "kms_key_id": "",
            "name": "dp-dl-kinesis-firehose-stream-1",
            "retention_period": 24,
            "shard_count": 1,
            "shard_level_metrics": [
              "IncomingBytes",
              "IncomingRecords",
              "IteratorAgeMilliseconds",
              "OutgoingBytes",
              "OutgoingRecords",
              "ReadProvisionedThroughputExceeded",
              "WriteProvisionedThroughputExceeded"
            ],
            "tags": {
              "Name": "dp-dl-kinesis-firehose-stream-1"
            },
            "timeouts": null
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "bucket_with_encryption",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "private",
            "arn": "arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1",
            "bucket": "dp-dl-kinesis-firehose-test-s3-1",
            "bucket_domain_name": "dp-dl-kinesis-firehose-test-s3-1.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "dp-dl-kinesis-firehose-test-s3-1.s3.eu-west-1.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "hosted_zone_id": "Z1BKCTXD74EZPE",
            "id": "dp-dl-kinesis-firehose-test-s3-1",
            "lifecycle_rule": [
              {
                "abort_incomplete_multipart_upload_days": 0,
                "enabled": true,
                "expiration": [],
                "id": "dp-dl-kinesis-firehose-test-s3-1-content",
                "noncurrent_version_expiration": [],
                "noncurrent_version_transition": [],
                "prefix": "/",
                "tags": {},
                "transition": [
                  {
                    "date": "",
                    "days": 30,
                    "storage_class": "STANDARD_IA"
                  },
                  {
                    "date": "",
                    "days": 60,
                    "storage_class": "GLACIER"
                  }
                ]
              },
              {
                "abort_incomplete_multipart_upload_days": 7,
                "enabled": true,
                "expiration": [],
                "id": "add-abort-incomplete-multipart-upload-lifecycle-policy",
                "noncurrent_version_expiration": [],
                "noncurrent_version_transition": [],
                "prefix": "",
                "tags": {},
                "transition": []
              }
            ],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "eu-west-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "arn:aws:kms:eu-west-1:659122056641:key/93f1687e-be54-48fa-af97-5b42fece2982",
                        "sse_algorithm": "aws:kms"
                      }
                    ]
                  }
                ]
              }
            ],
            "tags": {
              "Name": "dp-dl-kinesis-firehose-test-s3-1"
            },
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          }
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "bucket_without_encryption",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket_notification",
      "name": "bucket_notification",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "bucket": "dp-dl-kinesis-firehose-test-s3-1",
            "id": "dp-dl-kinesis-firehose-test-s3-1",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowRead\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:List*\",\n        \"s3:GetObject*\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write\"\n      }\n    },\n    {\n      \"Sid\": \"AllowWrite\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:RestoreObject\",\n        \"s3:PutObject*\",\n        \"s3:PutObject\",\n        \"s3:List*\",\n        \"s3:GetObject*\",\n        \"s3:DeleteObject*\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::659122056641:role/dp-dl-kinesis-firehose-stream-1-read-s3-write\"\n      }\n    },\n    {\n      \"Sid\": \"DenyIPAddr\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"s3:RestoreObject\",\n        \"s3:PutObject*\",\n        \"s3:PutObject\",\n        \"s3:GetObject*\",\n        \"s3:DeleteObject*\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1/*\",\n        \"arn:aws:s3:::dp-dl-kinesis-firehose-test-s3-1\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Condition\": {\n        \"NotIpAddress\": {\n          \"aws:SourceIP\": [\n            \"0.0.0.0/0\"\n          ]\n        }\n      }\n    }\n  ]\n}"
          },
          "depends_on": [
            "aws_s3_bucket.bucket_with_encryption",
            "aws_s3_bucket.bucket_without_encryption",
            "data.aws_iam_policy_document.policy[0]"
          ]
        }
      ]
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "policy_bucket_owner_full_control",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.kinesis_firehose.module.s3",
      "mode": "managed",
      "type": "aws_sqs_queue",
      "name": "queue",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    }
  ]
}
